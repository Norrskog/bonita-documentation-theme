{"version":3,"sources":["js/header-01-theme.js"],"names":["toDarkTheme","resolve","localStorage","setItem","document","querySelector","setAttribute","enableHightLightDarkTheme","toLightTheme","dark","currentHref","cssHref","hljsCssLink","getElementById","getAttribute","replace","console","log","performThemeSwitch","checkbox","switchBall","setTimeout","themeSwitchPromise","Promise","checked","finally","innerHTML","loader","createElement","toggleDarkThemeMode","appendChild","isDarkTheme","getItem","classList","add"],"mappings":"AAGA,SAASA,YAAaC,GACpBC,aAAaC,QAAQ,QAAS,QAC9BC,SAASC,cAAc,QAAQC,aAAa,aAAc,QAG1DC,2BAA0B,GAE1BN,GAAWA,IAGb,SAASO,aAAcP,GACrBC,aAAaC,QAAQ,QAAS,SAC9BC,SAASC,cAAc,QAAQC,aAAa,aAAc,SAG1DC,2BAA0B,GAE1BN,GAAWA,IAIb,SAASM,0BAA2BE,GAClC,IAEMC,EACAC,EAHFC,EAAcR,SAASS,eAAe,uBACtCD,GAEED,GADAD,EAAcE,EAAYE,aAAa,SACjBC,QAAQ,QAAS,UACvCN,IACFE,EAAUD,EAAYK,QAAQ,SAAU,UAE1CH,EAAYN,aAAa,OAAQK,IAEjCK,QAAQC,IAAI,mFAIhB,SAASC,mBAAoBC,EAAUC,GACrCC,WAAW,WACT,MAAMC,EAAqB,IAAIC,QAAQ,KACjCJ,EAASK,QACXxB,YAEAQ,cAFYP,KAMhBqB,EAAmBG,QAAQ,WACzBL,EAAWM,UAAY,MAExB,KAIL,MAAMC,OAASvB,SAASwB,cAAc,OAGtC,SAASC,oBAAqBV,GAC5B,MAAMC,EAAahB,SAASC,cAAc,sDAC1Ce,EAAWU,YAAYH,QACvBT,mBAAmBC,EAAUC,GAG/B,SAASW,cACP,MAAyC,SAAlC7B,aAAa8B,QAAQ,SAAsB,UAAY,YAThEL,OAAOM,UAAUC,IAAI,kBAaiB,SAAlChC,aAAa8B,QAAQ,SACvBhC,YAEAQ","file":"js/header-site.js","sourcesContent":["/* eslint-disable no-undef */\n/* eslint-disable no-unused-vars */\n\nfunction toDarkTheme (resolve) {\n  localStorage.setItem('theme', 'dark')\n  document.querySelector('html').setAttribute('data-theme', 'dark')\n\n  // Update highlight js theme\n  enableHightLightDarkTheme(true)\n  // Promise.resolve if existing\n  resolve && resolve()\n}\n\nfunction toLightTheme (resolve) {\n  localStorage.setItem('theme', 'light')\n  document.querySelector('html').setAttribute('data-theme', 'light')\n\n  // Update highlight js theme\n  enableHightLightDarkTheme(false)\n  // Promise.resolve if existing\n  resolve && resolve()\n}\n\n// Update highlight js to dark theme if dark = true\nfunction enableHightLightDarkTheme (dark) {\n  var hljsCssLink = document.getElementById('highlight-style-lnk')\n  if (hljsCssLink) {\n    var currentHref = hljsCssLink.getAttribute('href')\n    var cssHref = currentHref.replace('-dark', '-light')\n    if (dark) {\n      cssHref = currentHref.replace('-light', '-dark')\n    }\n    hljsCssLink.setAttribute('href', cssHref)\n  } else {\n    console.log('Failed to find highlight-style-lnk css link element in page, can not swap theme')\n  }\n}\n\nfunction performThemeSwitch (checkbox, switchBall) {\n  setTimeout(function () {\n    const themeSwitchPromise = new Promise((resolve) => {\n      if (checkbox.checked) {\n        toDarkTheme(resolve)\n      } else {\n        toLightTheme(resolve)\n      }\n    })\n\n    themeSwitchPromise.finally(function () {\n      switchBall.innerHTML = ''\n    })\n  }, 100)\n}\n\n// create the loader div\nconst loader = document.createElement('div')\nloader.classList.add('lds-dual-ring')\n\nfunction toggleDarkThemeMode (checkbox) {\n  const switchBall = document.querySelector('.theme-switch-wrapper .toggle-content .label .ball')\n  switchBall.appendChild(loader)\n  performThemeSwitch(checkbox, switchBall)\n}\n\nfunction isDarkTheme () {\n  return localStorage.getItem('theme') === 'dark' ? 'checked' : 'unchecked'\n}\n\n// init\nif (localStorage.getItem('theme') === 'dark') {\n  toDarkTheme()\n} else {\n  toLightTheme()\n}\n"]}